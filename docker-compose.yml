version: '3'

services:

  postgres:
    container_name: postgres_keycloak
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-keycloak-data:/var/lib/postgresql/data

  nginx:
    image: webdev00/nginx-with-config:0.0.3
    container_name: nginx
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"

  keycloak:
    container_name: keycloak
    image: jboss/keycloak
    restart: always
    environment:
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      # keycloak needs this for nginx proxy to work correctly with https
      PROXY_ADDRESS_FORWARDING: "true"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    volumes:
      - keycloak-data:/opt/jboss/keycloak/standalone/data
      # instead of a custom nginx image with config(s),
      # you can also mount the cert files directly into the keycloak image
      # 
      # - ./certs/fullchain.pem:/etc/x509/https/tls.crt
      # - ./certs/privkey.pem:/etc/x509/https/tls.key
      # 

  adminer:
    container_name: adminer
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    ports:
      - 8082:8080

volumes:
  postgres-keycloak-data:
  keycloak-data:
